module rem.mat.transform;

import rem.mat.mat;

REM_NAMESPACE_START
template <typename T>
constexpr mat<T, 4, 4> translate(T dx, T dy, T dz) {
    return mat<T, 4, 4>{
        1,  0,  0,  0,  // col 0
        0,  1,  0,  0,  // col 1
        0,  0,  1,  0,  // col 2
        dx, dy, dz, 1   // col 3
    };
} 

template <typename T>
constexpr mat<T, 4, 4> scale(T sx, T sy, T sz) {
    return mat<T, 4, 4>{
        sx, 0,  0,  0,  // col 0
        0,  sy, 0,  0,  // col 1
        0,  0,  sz, 0,  // col 2
        0,  0,  0,  1   // col 3

    };
} 

template <typename T>
constexpr mat<T, 4, 4> scale(T s) {
    return scale(s, s, s);
}

constexpr int qwer2() { return 123; }

REM_NAMESPACE_END