module rem.mat.transform;

REM_NAMESPACE_START
//template <typename T>
//constexpr mat<T, 4, 4> translate(T dx, T dy, T dz) {
//    return mat<T, 4, 4>{
//        1,  0,  0,  0,  // col 0
//        0,  1,  0,  0,  // col 1
//        0,  0,  1,  0,  // col 2
//        dx, dy, dz, 1   // col 3
//    };
//} 
//
//template <typename T, typename T2>
//constexpr mat<T, 4, 4> scale(T2 sx, T2 sy, T2 sz) {
//    return mat<T, 4, 4>{
//        sx, 0,  0,  0,  // col 0
//        0,  sy, 0,  0,  // col 1
//        0,  0,  sz, 0,  // col 2
//        0,  0,  0,  1   // col 3
//
//    };
//} 
//
//template <typename T , typename T2>
//constexpr mat<T, 4, 4> scale(T2 s) {
//    return scale(s, s, s);
//}

REM_NAMESPACE_END